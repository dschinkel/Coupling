import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPullImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

plugins {
    id("com.github.node-gradle.node") version "1.3.0"
    id 'com.bmuschko.docker-remote-api' version '4.2.0'
}

node {
    version = "11.6.0"
    npmVersion = "6.5.0"
    yarnVersion = "1.12.3"
    download = true
}

task clean {
    doLast {
        delete file('build')
        delete file('public/app/build')
        delete file('test-output')
    }
}

yarn {
    mustRunAfter(":client:yarn")
    inputs.file file('package.json')
    outputs.dir file('node_modules')
}


task serverCompile(type: YarnTask) {
    dependsOn yarn
    mustRunAfter clean
    inputs.dir 'node_modules'
    inputs.file file('package.json')
    inputs.file file('tsconfig.json')
    inputs.file file('server/webpack.config.js')
    inputs.dir 'server'
    inputs.dir 'common'
    outputs.dir file('build')
    environment 'NODE_ENV': 'production'
    args = ["webpack", '--config', 'server/webpack.config.js']
}

task compile {
    dependsOn serverCompile, ":client:compile"
}

task serverTest(type: YarnTask) {
    dependsOn yarn
    inputs.file file('package.json')
    inputs.files serverCompile.inputs.files
    inputs.dir 'test/unit/server'
    outputs.dir 'test-output/server.unit'

    args = ['run', 'serverTest', '--silent']
}

task endpointTest(type: YarnTask) {
    dependsOn yarn, serverCompile
    mustRunAfter serverTest
    inputs.files serverTest.inputs.files
    inputs.files serverCompile.outputs.files
    inputs.file file('package.json')
    inputs.dir 'test/endpoint'
    outputs.dir 'test-output/endpoint'

    args = ['run', 'endpointTest', '--silent']
}

task updateWebdriver(type: YarnTask) {
    dependsOn("yarn")
    outputs.dir 'node_modules/webdriver-manager/selenium/'
    args = ['run', 'update-webdriver', '--silent']
}

task endToEndTest(type: YarnTask) {
    dependsOn compile, updateWebdriver
    mustRunAfter serverTest, ":client:test", endpointTest
    inputs.files tasks.findByPath(":client:test").inputs.files
    inputs.files tasks.findByPath(":client:compile").outputs.files
    inputs.files serverTest.inputs.files
    inputs.files serverCompile.outputs.files
    inputs.file file('package.json')
    inputs.dir 'test/e2e'
    outputs.dir 'test-output/e2e'

    args = ['run', 'protractor', '--silent', '--seleniumAddress', "$System.env.SELENIUM_ADDRESS"]
}

task test {
    dependsOn serverTest, ":client:test", endpointTest
}

task start(type: YarnTask) {
    dependsOn compile
    args = ['run', 'start-built-app']
}

task watch(type: NodeTask) {
    args = ['test/continuous-run.js']
}

task build {
    dependsOn test, endToEndTest, ":client:compile"
}

task pullProductionImage(type: DockerPullImage) {
    repository = 'zegreatrob/coupling'
    tag = "latest"
}

task buildProductionImage(type: DockerBuildImage) {
    mustRunAfter "pullProductionImage"
    inputDir = file("./")
    dockerFile = file("Dockerfile.prod")
    remove = false
    tags.add('zegreatrob/coupling')
}

task pushProductionImage(type: DockerPushImage) {
    mustRunAfter "buildProductionImage"
    imageName = 'zegreatrob/coupling'
    tag = "latest"
}

docker {
    registryCredentials {
        username = System.getenv("DOCKER_USER")
        password = System.getenv("DOCKER_PASS")
        email = System.getenv("DOCKER_EMAIL")
    }
}