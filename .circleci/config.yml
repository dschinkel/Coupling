version: 2
jobs:
  build:
    docker:
      - image: openjdk:8-jdk
      - image: mongo:latest
      - image: selenium/standalone-chrome
    environment:
      SELENIUM_ADDRESS: http://localhost:4444/wd/hub
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-24-{{ .Branch }}
      - run: "./gradlew yarn"
      - save_cache:
          key: coupling-cache-24-{{ .Branch }}
          paths:
            - "~/.gradle"
            - ".gradle"
            - "client/.gradle"
            - "node_modules"
            - "/root/.konan"
      - run: "./gradlew build check"
      - store_artifacts:
          path: build/test-output
      - store_test_results:
          path: build/test-output
      - persist_to_workspace:
          root: ./
          paths:
            - "*"
  deploy-prod:
    docker:
      - image: openjdk:8-jdk
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: coupling-cache-24-{{ .Branch }}
      - setup_remote_docker
      - run: "./gradlew buildProductionImage pushProductionImage"
  notify-aws:
    docker:
      - image: mikesir87/aws-cli
    environment:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - run: "aws ecs update-service --service Coupling-service --force-new-deployment"
  update-client:
    docker:
      - image: openjdk:8-jdk
      - image: mongo:latest
      - image: selenium/standalone-chrome
    environment:
      SELENIUM_ADDRESS: http://localhost:4444/wd/hub
    steps:
      - checkout
      - restore_cache:
          key: coupling-cache-24-{{ .Branch }}
      - run: "npm -g npm-check-updates"
      - run: "cd client; ncu -a"
      - run: "./gradlew build check"
      - store_artifacts:
          path: build/test-output
      - store_test_results:
          path: build/test-output
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master
      - notify-aws:
          requires:
            - deploy-prod
  update:
    triggers:
      - schedule:
          cron: "0 16 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - update-client
